var searchIndex = JSON.parse('{\
"wasm_lsp_server":{"doc":"The implementation of the WebAssembly language server.","t":[0,0,0,0,0,4,13,13,11,11,11,11,11,0,11,11,0,11,11,11,11,11,0,0,0,11,0,0,0,11,11,11,11,11,11,3,11,11,11,12,11,11,12,11,12,11,12,11,11,11,12,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,8,16,8,3,6,11,11,0,12,12,11,11,11,11,11,11,11,11,11,10,10,11,11,10,10,10,10,10,11,11,11,8,16,0,10,10,10,10,10,10,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,8,10,13,13,3,4,13,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,12,11,11,11,12,11,11,11,11,0,5,5,5,5,0,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,2,0,5,0,0,5,5,5,0,0,5,5,0,5,5,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11],"n":["core","handler","metadata","provider","server","Language","Wast","Wat","borrow","borrow_mut","clone","clone_into","cmp","document","eq","equivalent","error","fmt","from","hash","id","into","language","node","parser","partial_cmp","range","session","text","to_owned","try_from","try_from","try_from","try_into","type_id","Document","borrow","borrow_mut","change","content","from","into","language","open","parser","text","tree","try_from","try_into","type_id","0","ClientNotInitialized","Error","IntoJsonRpcError","SessionResourceNotFound","borrow","borrow","borrow_mut","borrow_mut","eq","equivalent","fmt","fmt","from","from","into","into","ne","to_string","try_from","try_from","try_into","try_into","type_id","type_id","kind","uri","COMMENT_NODES","wast","wat","field","grouped","kind","IDENTIFIER","MODULE_FIELDS","ACTION","ACTION_GET","ACTION_INVOKE","ALIGN_OFFSET_VALUE","ALIGN_VALUE","ANNOTATION","ANNOTATION_PARENS","ANNOTATION_PART","ASSERTION","ASSERT_EXHAUSTION","ASSERT_INVALID","ASSERT_MALFORMED","ASSERT_RETURN","ASSERT_RETURN_ARITHMETIC_NAN","ASSERT_RETURN_CANONICAL_NAN","ASSERT_TRAP_ACTION","ASSERT_TRAP_MODULE","ASSERT_UNLINKABLE","BLOCK_BLOCK","BLOCK_IF","BLOCK_LOOP","COMMAND","COMMENT_BLOCK","COMMENT_BLOCK_ANNOT","COMMENT_LINE","COMMENT_LINE_ANNOT","DEC_FLOAT","DEC_NAT","ELEM_EXPR","ELEM_EXPR_EXPR","ELEM_EXPR_ITEM","ELEM_KIND","ELEM_LIST","ESCAPE_SEQUENCE","EXPORT","EXPORT_DESC","EXPORT_DESC_FUNC","EXPORT_DESC_GLOBAL","EXPORT_DESC_MEMORY","EXPORT_DESC_TABLE","EXPR","EXPR1","EXPR1_BLOCK","EXPR1_CALL","EXPR1_IF","EXPR1_LOOP","EXPR1_PLAIN","EXPR_PLAIN_CONST","FLOAT","FUNC_LOCALS","FUNC_LOCALS_MANY","FUNC_LOCALS_ONE","FUNC_TYPE","FUNC_TYPE_PARAMS","FUNC_TYPE_PARAMS_MANY","FUNC_TYPE_PARAMS_ONE","FUNC_TYPE_RESULTS","GLOBAL_TYPE","GLOBAL_TYPE_IMM","GLOBAL_TYPE_MUT","HEX_FLOAT","HEX_NAT","IDENTIFIER","IF_BLOCK","IMPORT","IMPORT_DESC","IMPORT_DESC_FUNC_TYPE","IMPORT_DESC_GLOBAL_TYPE","IMPORT_DESC_MEMORY_TYPE","IMPORT_DESC_TABLE_TYPE","IMPORT_DESC_TYPE_USE","INDEX","INSTR","INSTR_BLOCK","INSTR_CALL","INSTR_LIST","INSTR_PLAIN","INT","LIMITS","LITERAL_NAN","LITERAL_NAN_ARITHMETIC","LITERAL_NAN_CANONICAL","MEMORY_FIELDS_DATA","MEMORY_FIELDS_TYPE","MEMORY_TYPE","MEMORY_USE","META","META_INPUT","META_OUTPUT","META_SCRIPT","MODULE","MODULE_FIELD","MODULE_FIELD_DATA","MODULE_FIELD_ELEM","MODULE_FIELD_EXPORT","MODULE_FIELD_FUNC","MODULE_FIELD_GLOBAL","MODULE_FIELD_IMPORT","MODULE_FIELD_MEMORY","MODULE_FIELD_START","MODULE_FIELD_TABLE","MODULE_FIELD_TYPE","NAME","NAN","NAT","NUM","NUM_TYPE_F32","NUM_TYPE_F64","NUM_TYPE_I32","NUM_TYPE_I64","NUM_TYPE_V128","OFFSET","OFFSET_CONST_EXPR","OFFSET_EXPR","OFFSET_VALUE","OP_CONST","OP_CONST_REF","OP_FUNC_BIND","OP_INDEX","OP_INDEX_OPT","OP_INDEX_OPT_OFFSET_OPT_ALIGN_OPT","OP_LET","OP_NULLARY","OP_SELECT","OP_SIMD_CONST","OP_SIMD_LANE","OP_SIMD_OFFSET_OPT_ALIGN_OPT","OP_TABLE_COPY","OP_TABLE_INIT","REF_KIND","REF_TYPE","REF_TYPE_EXTERNREF","REF_TYPE_FUNCREF","REF_TYPE_REF","REGISTER","RESERVED","RESULT","RESULT_CONST","RESULT_CONST_NAN","RESULT_REF_EXTERN","RESULT_REF_FUNC","RESULT_REF_NULL","ROOT","SCRIPT_MODULE","SCRIPT_MODULE_BINARY","SCRIPT_MODULE_QUOTE","SHARE","STRING","TABLE_FIELDS_ELEM","TABLE_FIELDS_TYPE","TABLE_TYPE","TABLE_USE","TYPE_FIELD","TYPE_USE","VALUE_TYPE","VALUE_TYPE_NUM_TYPE","VALUE_TYPE_REF_TYPE","token","ALIGN","ASSERT_EXHAUSTION","ASSERT_INVALID","ASSERT_MALFORMED","ASSERT_RETURN","ASSERT_RETURN_ARITHMETIC_NAN","ASSERT_RETURN_CANONICAL_NAN","ASSERT_TRAP","ASSERT_UNLINKABLE","BINARY","BLOCK","BR_TABLE","CALL_INDIRECT","DATA","DECLARE","DOLLAR_SIGN","ELEM","ELSE","END","EQUALS","EXPORT","EXTERNREF","F32","F64","FULL_STOP","FUNC","FUNCREF","GET","GLOBAL","I32","I64","IF","IMPORT","INF","INPUT","INVOKE","ITEM","LOCAL","LOOP","LPAREN","LPAREN_AMPERSAND","LPAREN_SEMICOLON","MEMORY","MUT","OFFSET","OUTPUT","PARAM","QUOTE","REF","REGISTER","RESULT","REVERSE_SOLIDUS_REVERSE_SOLIDUS","RPAREN","SCRIPT","SEMICOLON_SEMICOLON","TABLE","THEN","TYPE","V128","field","grouped","kind","IDENTIFIER","MODULE_FIELDS","ALIGN_OFFSET_VALUE","ALIGN_VALUE","ANNOTATION","ANNOTATION_PARENS","ANNOTATION_PART","BLOCK_BLOCK","BLOCK_IF","BLOCK_LOOP","COMMENT_BLOCK","COMMENT_BLOCK_ANNOT","COMMENT_LINE","COMMENT_LINE_ANNOT","DEC_FLOAT","DEC_NAT","ELEM_EXPR","ELEM_EXPR_EXPR","ELEM_EXPR_ITEM","ELEM_KIND","ELEM_LIST","ESCAPE_SEQUENCE","EXPORT","EXPORT_DESC","EXPORT_DESC_FUNC","EXPORT_DESC_GLOBAL","EXPORT_DESC_MEMORY","EXPORT_DESC_TABLE","EXPR","EXPR1","EXPR1_BLOCK","EXPR1_CALL","EXPR1_IF","EXPR1_LOOP","EXPR1_PLAIN","FLOAT","FUNC_LOCALS","FUNC_LOCALS_MANY","FUNC_LOCALS_ONE","FUNC_TYPE","FUNC_TYPE_PARAMS","FUNC_TYPE_PARAMS_MANY","FUNC_TYPE_PARAMS_ONE","FUNC_TYPE_RESULTS","GLOBAL_TYPE","GLOBAL_TYPE_IMM","GLOBAL_TYPE_MUT","HEX_FLOAT","HEX_NAT","IDENTIFIER","IF_BLOCK","IMPORT","IMPORT_DESC","IMPORT_DESC_FUNC_TYPE","IMPORT_DESC_GLOBAL_TYPE","IMPORT_DESC_MEMORY_TYPE","IMPORT_DESC_TABLE_TYPE","IMPORT_DESC_TYPE_USE","INDEX","INSTR","INSTR_BLOCK","INSTR_CALL","INSTR_LIST","INSTR_PLAIN","INT","LIMITS","MEMORY_FIELDS_DATA","MEMORY_FIELDS_TYPE","MEMORY_TYPE","MEMORY_USE","MODULE","MODULE_FIELD","MODULE_FIELD_DATA","MODULE_FIELD_ELEM","MODULE_FIELD_EXPORT","MODULE_FIELD_FUNC","MODULE_FIELD_GLOBAL","MODULE_FIELD_IMPORT","MODULE_FIELD_MEMORY","MODULE_FIELD_START","MODULE_FIELD_TABLE","MODULE_FIELD_TYPE","NAME","NAN","NAT","NUM","NUM_TYPE_F32","NUM_TYPE_F64","NUM_TYPE_I32","NUM_TYPE_I64","NUM_TYPE_V128","OFFSET","OFFSET_CONST_EXPR","OFFSET_EXPR","OFFSET_VALUE","OP_CONST","OP_FUNC_BIND","OP_INDEX","OP_INDEX_OPT","OP_INDEX_OPT_OFFSET_OPT_ALIGN_OPT","OP_LET","OP_NULLARY","OP_SELECT","OP_SIMD_CONST","OP_SIMD_LANE","OP_SIMD_OFFSET_OPT_ALIGN_OPT","OP_TABLE_COPY","OP_TABLE_INIT","REF_KIND","REF_TYPE","REF_TYPE_EXTERNREF","REF_TYPE_FUNCREF","REF_TYPE_REF","RESERVED","ROOT","SHARE","STRING","TABLE_FIELDS_ELEM","TABLE_FIELDS_TYPE","TABLE_TYPE","TABLE_USE","TYPE_FIELD","TYPE_USE","VALUE_TYPE","VALUE_TYPE_NUM_TYPE","VALUE_TYPE_REF_TYPE","token","ALIGN","ASSERT_EXHAUSTION","ASSERT_INVALID","ASSERT_MALFORMED","ASSERT_RETURN","ASSERT_RETURN_ARITHMETIC_NAN","ASSERT_RETURN_CANONICAL_NAN","ASSERT_TRAP","ASSERT_UNLINKABLE","BINARY","BLOCK","BR_TABLE","CALL_INDIRECT","DATA","DECLARE","DOLLAR_SIGN","ELEM","ELSE","END","EQUALS","EXPORT","EXTERNREF","F32","F64","FULL_STOP","FUNC","FUNCREF","GET","GLOBAL","I32","I64","IF","IMPORT","INF","INPUT","INVOKE","ITEM","LOCAL","LOOP","LPAREN","LPAREN_AMPERSAND","LPAREN_SEMICOLON","MEMORY","MUT","OFFSET","OUTPUT","PARAM","QUOTE","REF","REGISTER","RESULT","REVERSE_SOLIDUS_REVERSE_SOLIDUS","RPAREN","SCRIPT","SEMICOLON_SEMICOLON","TABLE","THEN","TYPE","V128","BasicNodeWalker","Context","Level","NodeExt","NodeWalker","TraceNodeWalker","borrow","borrow_mut","context","context","done","from","goto_first_child","goto_next","goto_next_ancestor_sibling","goto_next_has_error","goto_next_sibling","goto_parent","into","kind","matches_subtypes","new","new","node","pop","push","push_ancestor","push_prefix","reverse","try_from","try_into","type_id","Context","Level","basic","new","pop","push","push_ancestor","push_prefix","reverse","trace","Context","Level","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","into","into","ne","ne","new","pop","push","push_ancestor","push_prefix","reverse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Context","Level","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","into","into","ne","ne","new","pop","push","push_ancestor","push_prefix","reverse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","wast","wat","RangeExt","contains","Document","Parser","Session","SessionResourceKind","Tree","borrow","borrow","borrow_mut","borrow_mut","client","client_capabilities","clone","clone_into","eq","equivalent","fmt","from","from","get_mut_parser","get_mut_text","get_mut_tree","get_text","get_tree","insert_document","into","into","new","remove_document","semantic_tokens_legend","server_capabilities","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Text","borrow","borrow_mut","content","from","from","into","language","new","try_from","try_into","type_id","text_document","did_change","did_close","did_open","document_symbol","semantic_tokens","full","range","CFG_ENDIAN","CFG_ENV","CFG_FAMILY","CFG_OS","CFG_POINTER_WIDTH","CFG_TARGET_ARCH","CI_PLATFORM","DEBUG","FEATURES","FEATURES_STR","GIT_COMMIT_HASH","GIT_DIRTY","GIT_HEAD_REF","GIT_VERSION","HOST","NUM_JOBS","OPT_LEVEL","PKG_AUTHORS","PKG_DESCRIPTION","PKG_HOMEPAGE","PKG_LICENSE","PKG_NAME","PKG_REPOSITORY","PKG_VERSION","PKG_VERSION_MAJOR","PKG_VERSION_MINOR","PKG_VERSION_PATCH","PKG_VERSION_PRE","PROFILE","RUSTC","RUSTC_VERSION","RUSTDOC","RUSTDOC_VERSION","TARGET","diagnostics","document_symbol","document_symbol","semantic_tokens","diagnostics","wast","wat","diagnostics","diagnostics","document_symbol","wast","wat","document_symbol","document_symbol","builder","full","range","wast","wat","SemanticTokensBuilder","borrow","borrow_mut","build","build_delta","clone","clone_into","fmt","from","id","into","new","prev_result","push","push_encoded","reset","to_owned","try_from","try_into","type_id","Server","borrow","borrow_mut","capabilities","client","did_change","did_close","did_open","document_symbol","from","initialize","initialized","into","new","semantic_tokens_full","semantic_tokens_range","session","shutdown","try_from","try_into","type_id"],"q":["wasm_lsp_server","","","","","wasm_lsp_server::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::document","","","","","","","","","","","","","","","wasm_lsp_server::core::error","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::error::Error","","wasm_lsp_server::core::language","","","wasm_lsp_server::core::language::wast","","","wasm_lsp_server::core::language::wast::field","wasm_lsp_server::core::language::wast::grouped","wasm_lsp_server::core::language::wast::kind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::language::wast::kind::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::language::wat","","","wasm_lsp_server::core::language::wat::field","wasm_lsp_server::core::language::wat::grouped","wasm_lsp_server::core::language::wat::kind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::language::wat::kind::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::node::context","","","","","","","","","","wasm_lsp_server::core::node::context::basic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::node::context::trace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::parser","","wasm_lsp_server::core::range","","wasm_lsp_server::core::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::core::text","","","","","","","","","","","","wasm_lsp_server::handler","wasm_lsp_server::handler::text_document","","","","","wasm_lsp_server::handler::text_document::semantic_tokens","","wasm_lsp_server::metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::provider","","","","wasm_lsp_server::provider::diagnostics","","","wasm_lsp_server::provider::diagnostics::wast","wasm_lsp_server::provider::diagnostics::wat","wasm_lsp_server::provider::document_symbol","","","wasm_lsp_server::provider::document_symbol::wast","wasm_lsp_server::provider::document_symbol::wat","wasm_lsp_server::provider::semantic_tokens","","","","","wasm_lsp_server::provider::semantic_tokens::builder","","","","","","","","","","","","","","","","","","","","wasm_lsp_server::server","","","","","","","","","","","","","","","","","","","",""],"d":["Core definitions for server functionality. Core …","LSP message handler functions. LSP message handler …","Build-time metadata for the server. Build-time metadata …","LSP feature provider functions. LSP feature provider …","LSP server capabilities and server instance. LSP server …","Languages supported by the server.","The <code>.wast</code> language.","The <code>.wat</code> language.","","","","","","Definitions related to LSP documents. Definitions related …","","","Definitions related to runtime errors. Definitions related …","","Returns the argument unchanged.","","Compute the language id string for the given language.","Calls <code>U::from(self)</code>.","Functionality related to <code>tree_sitter::Language</code>. …","Functionality related to <code>tree_sitter::Node</code>.","Functions for creating [<code>tree-sitter::Parser</code>]. …","","Functionality related to <code>tree_sitter::Range</code>.","Definitions related to the LSP session. Definitions …","Definitions related to working with textual content. …","","","","","","","Documents for the LSP session.","","","","The textual content of the document.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The language-id of the document.","Create a new <code>Document</code> given <code>lsp::DidOpenTextDocumentParams</code>.","The active parser for the document.","Return the language-id and textual content portion of the …","The current syntax tree for the document.","","","","","Error that occurs when [<code>core::Session.client</code>] is accessed …","Runtime errors for the LSP server.","Wrapper struct for converting <code>anyhow::Error</code> into …","Error that occurs when a session resource is requested and …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","The kind of the requested session resource.","The URL of the requested session resource.","Comment nodes for both the <code>.wast</code> and <code>.wat</code> grammar.","Functions for working with the <code>.wast</code> grammar. Functions …","Functions for working with the <code>.wat</code> grammar. Functions for …tility trait for working with <code>tree_sitter::Node</code>.","","","","","","","","Returns the argument unchanged.","Move the cursor to the first child node.","Move cursor to the next accessible node.","Move the cursor to the next ancestor sibling node.","Move cursor to the next accessible node that has an error.","Move the cursor to the next sibling node.","Move the cursor to the parent node.","Calls <code>U::from(self)</code>.","Return the current node’s kind id.","Predicate to determine if a supertype node matches a given …","","Create a new NodeWalker.","Return the current node for the cursor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The current node context.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Create a <code>.wast</code> parser from the tree-sitter grammar.","Create a <code>.wat</code> parser from the tree-sitter grammar.","Utility trait for working with <code>tree_sitter::Range</code>.","Predicate to determine if one range contains another range","A tag representing a <code>core::Document</code>.","A tag representing a <code>tree_sitter::Parser</code>.","The LSP server session. This contains the relevant state …","A tag representing of the kinds of session resource.","A tag representing a <code>tree_sitter::Tree</code>.","","","","","Retrieve the handle for the LSP client.","The current client LSP capabilities configuration.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the <code>tree_sitter::Parser</code> for a …","Get a mutable reference to the <code>core::Text</code> for a …","Get a mutable reference to the <code>tree_sitter::Tree</code> for a …","Get a reference to the <code>core::Text</code> for a <code>core::Document</code> in …","Get a reference to the <code>tree_sitter::Tree</code> for a …","Insert a <code>core::Document</code> into the <code>Session</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Session</code>.","Remove a <code>core::Document</code> from the <code>Session</code>.","Retrieve the LSP semantic tokens legend.","The current server LSP capabilities configuration.","","","","","","","","Convenience struct for packaging the language-id and …","","","The textual content of the <code>core::Document</code>.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The language-id of the <code>core::Document</code>.","Create a new <code>Text</code> from a language-id and some textual …","","","","LSP message handler functions for <code>textDocument/*</code>.","LSP message handler function for <code>textDocument/didChange</code>.","LSP message handler function for <code>textDocument/didClose</code>.","LSP message handler function for <code>textDocument/didOpen</code>.","LSP message handler function for …","LSP message handler function for …","LSP message handler function for …","LSP message handler function for …","The endianness, given by <code>CARGO_CFG_TARGET_ENDIAN</code>.","The toolchain-environment, given by <code>CARGO_CFG_TARGET_ENV</code>.","The OS-family, given by <code>CARGO_CFG_TARGET_FAMILY</code>.","The operating system, given by <code>CARGO_CFG_TARGET_OS</code>.","The pointer width, given by <code>CARGO_CFG_TARGET_POINTER_WIDTH</code>.","The target architecture, given by <code>CARGO_CFG_TARGET_ARCH</code>.","The Continuous Integration platform detected during …","Value of DEBUG for the profile used during compilation.","The features that were enabled during compilation.","The features as a comma-separated string.","If the crate was compiled from within a git-repository, …","If the repository had dirty/staged files.","If the crate was compiled from within a git-repository, …","If the crate was compiled from within a git-repository, …","The host triple of the rust compiler.","The parallelism that was specified during compilation.","Value of OPT_LEVEL for the profile used during compilation.","A colon-separated list of authors.","The description.","The homepage.","The license.","The name of the package.","The source repository as advertised in Cargo.toml.","The full version.","The major version.","The minor version.","The patch version.","The pre-release version.","<code>release</code> for release builds, <code>debug</code> for other builds.","The compiler that cargo resolved to use.","The output of <code>rustc -V</code>","The documentation generator that cargo resolved to use.","The output of <code>rustdoc -V</code>","The target triple that was being compiled for.","Provider definitions for LSP …","Provider definitions for LSP <code>textDocument/documentSymbol</code>","","Provider definitions for LSP <code>textDocument/semanticTokens/*</code>","Provider function for LSP <code>textDocument/publishDiagnostics</code>.","Provider definitions for LSP …","Provider definitions for LSP …","Provider function for LSP <code>textDocument/publishDiagnostics</code> …","Provider function for LSP <code>textDocument/publishDiagnostics</code> …","Provider function for LSP <code>textDocument/documentSymbol</code>.","Provider definitions for LSP <code>textDocument/documentSymbol</code> …","Provider definitions for LSP <code>textDocument/documentSymbol</code> …","Provider function for LSP <code>textDocument/documentSymbol</code> for …","Provider function for LSP <code>textDocument/documentSymbol</code> for …","Definitions for the semantic tokens builder used during …","LSP message handler function for …","LSP message handler function for …","Semantic tokens provider definitions for “.wast” files.","Semantic tokens provider definitions for “.wat” files.","Manages tokenization state for encoding semantic token …","","","Build the <code>lsp::SemanticTokens</code> data from the tokenization …","Build the <code>lsp::SemanticTokensFullDeltaResult</code> data from the …","","","","Returns the argument unchanged.","Return the ID for the current tokenization state.","Calls <code>U::from(self)</code>.","Create a new <code>SemanticTokensBuilder</code>.","Rollback tokenization state to previous data.","Push and encode a token into the tokenization state.","Push a token in encoded form into the tokenization state.","Reset tokenization state to defaults.","","","","","The WebAssembly language server structure.","","","Convenience function for building <code>lsp::ServerCapabilities</code> …","Reference to the LSP client.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Create a new <code>Server</code> instance.","","","Reference to the LSP session.","","","",""],"i":[0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,4,0,0,4,3,4,3,4,4,4,4,4,3,4,3,4,4,4,3,4,3,4,3,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,7,7,0,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,6,6,6,6,6,7,7,7,0,6,0,6,6,6,6,6,6,0,0,0,9,10,9,10,9,10,9,10,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,10,10,10,10,10,10,9,10,9,10,9,10,9,10,0,0,11,12,11,12,11,12,11,12,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,12,12,12,12,12,12,11,12,11,12,11,12,11,12,0,0,0,13,14,14,0,0,14,15,14,15,14,15,15,14,14,14,14,14,15,14,15,15,15,15,15,15,15,14,15,15,15,15,14,15,14,15,14,15,14,0,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],"f":[null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["language",4]],[[["",0],["",0]]],[[["",0],["language",4]],["ordering",4]],null,[[["",0],["language",4]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["",0],["",0]]],[[["",0]],["str",0]],[[]],null,null,null,[[["",0],["language",4]],["option",4,[["ordering",4]]]],null,null,null,[[["",0]]],[[["str",0]],["result",4,[["language",4],["error",3]]]],[[["path",3]],["result",4,[["language",4],["error",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["arc",3,[["session",3]]],["url",3],["rope",3]]],null,[[]],[[]],null,[[["didopentextdocumentparams",3]],["result",6,[["option",4]]]],null,[[["",0]],["text",3]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["error",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0],["error",4]],["bool",0]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[["",0]],["u16",0]],[[["",0],["u16",0]],["bool",0]],[[]],[[["language",4],["node",3]],["nodewalker",3]],[[["",0]],["node",3]],[[["",0]],["option",4]],[[["",0]]],[[["",0],["node",3],["vec",3,[["node",3],["global",3]]]]],[[["",0],["node",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[]],[[["",0]],["option",4]],[[["",0]]],[[["",0],["node",3],["vec",3,[["node",3],["global",3]]]]],[[["",0],["node",3]]],[[["",0]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["level",3]],[[["",0]],["context",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["context",3]],[[["",0],["level",3]],["bool",0]],[[["",0],["context",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[["",0],["level",3]],["bool",0]],[[["",0],["context",3]],["bool",0]],[[],["context",3]],[[["",0]],["option",4]],[[["",0]]],[[["",0],["node",3],["vec",3,[["node",3],["global",3]]]]],[[["",0],["node",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["level",3]],[[["",0]],["context",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["context",3]],[[["",0],["level",3]],["bool",0]],[[["",0],["context",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[["",0],["level",3]],["bool",0]],[[["",0],["context",3]],["bool",0]],[[],["context",3]],[[["",0]],["option",4]],[[["",0]]],[[["",0],["node",3],["vec",3,[["node",3],["global",3]]]]],[[["",0],["node",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",4,[["parser",3],["error",3]]]],[[],["result",4,[["parser",3],["error",3]]]],null,[[["",0],["range",3]],["bool",0]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",6,[["client",3]]]],null,[[["",0]],["sessionresourcekind",4]],[[["",0],["",0]]],[[["",0],["sessionresourcekind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["url",3]]],[[["",0],["url",3]]],[[["",0],["url",3]]],[[["",0],["url",3]]],[[["",0],["url",3]]],[[["",0],["url",3],["document",3]],["result",6]],[[]],[[]],[[["option",4,[["client",3]]]],["result",6]],[[["",0],["url",3]],["result",6]],[[["",0]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],[[["document",3]]],[[]],null,[[],["result",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["arc",3,[["session",3]]],["didchangetextdocumentparams",3]]],[[["arc",3,[["session",3]]],["didclosetextdocumentparams",3]]],[[["arc",3,[["session",3]]],["didopentextdocumentparams",3]]],[[["arc",3,[["session",3]]],["documentsymbolparams",3]]],null,[[["arc",3,[["session",3]]],["semantictokensparams",3]]],[[["arc",3,[["session",3]]],["semantictokensrangeparams",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tree",3],["text",3]],["vec",3,[["diagnostic",3]]]],null,null,[[["tree",3],["rope",3]],["vec",3,[["diagnostic",3]]]],[[["tree",3],["rope",3]],["vec",3,[["diagnostic",3]]]],[[["arc",3,[["session",3]]],["documentsymbolparams",3]]],null,null,[[["arc",3,[["session",3]]],["documentsymbolparams",3],["rope",3]]],[[["arc",3,[["session",3]]],["documentsymbolparams",3],["rope",3]]],null,[[["arc",3,[["session",3]]],["semantictokensparams",3]]],[[["arc",3,[["session",3]]],["semantictokensrangeparams",3]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["semantictokens",3]],[[["",0]],["result",6,[["semantictokensfulldeltaresult",4]]]],[[["",0]],["semantictokensbuilder",3]],[[["",0],["",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0]],["string",3]],[[]],[[["rope",3],["option",4,[["semantictokenslegend",3]]]],["result",6]],[[["",0],["str",0]],["result",6]],[[["",0],["node",3],["semantictokentype",3],["option",4,[["vec",3,[["semantictokenmodifier",3]]]]]],["result",6]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0],["u32",0]]],[[["",0]],["result",6]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["servercapabilities",3]],null,[[["",0],["didchangetextdocumentparams",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["didclosetextdocumentparams",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["didopentextdocumentparams",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["documentsymbolparams",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["",0],["initializeparams",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["initializedparams",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["client",3]],["result",6]],[[["",0],["semantictokensparams",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["semantictokensrangeparams",3]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"Language"],[3,"Document"],[3,"IntoJsonRpcError"],[4,"Error"],[13,"SessionResourceNotFound"],[8,"Context"],[3,"NodeWalker"],[8,"NodeExt"],[3,"Level"],[3,"Context"],[3,"Level"],[3,"Context"],[8,"RangeExt"],[4,"SessionResourceKind"],[3,"Session"],[3,"Text"],[3,"SemanticTokensBuilder"],[3,"Server"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
